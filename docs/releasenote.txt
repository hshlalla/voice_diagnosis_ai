Release 0.0.001
- Wrapped the diagnostic service with try-catch.
- Implemented return handling in the diagnostic service.
- Modified the diagnostic response format.
- Applied the model to derive a single result.
- Responded with diagnostic probability as a percentage rounded to one decimal place.
- diagnosis.py complete

Release 0.0.002
- Created a folder for the trained model.
- Added a 'train' folder and moved training-related code.
- Built a Flask server for API integration.
- Removed rescale_score.
- Updated mel.py to work in real-time with the API.
- Designed a Bootstrap front page with a popup triggered by the "Start" button.
- Upgraded librosa to fix errors.
- Added model folder to .gitignore to prevent large file uploads.
- Developed a Flask web API.


Release 0.0.003
- main.py complete
- Added a final model that works when only 10 questions are answered.
- Updated the model loading process to include q10 and q11.
- Modified the final_classification function to work correctly for both 10-question and 11-question cases.
- Linked the software version with the web commit version.
- Changed the diagnosis input format to accept PNG files.
- Updated classification to normal vs. abnormal 
- Added sum_dict to individual_score.
- Limited sum_dict values to 4 decimal places.
- Fixed an error in sum_dict.values.
- Corrected the proba value in individual_score.
- Separated modules for better organization.
- main.py Created a Mel module for testing.
- Removed unnecessary commands and simplified complex code.
- Updated .gitignore file.
- index.html Modified. 
- css added

Release 0.0.004
- Integrated mel spectrogram extraction in JavaScript: Previously executed in two stages, now processed in a single step from audio extraction to feature generation.
- Completed integration testing in main.py.
- Updated deprecated libraries to their latest supported versions.
- Modified JavaScript function calls for improved execution.